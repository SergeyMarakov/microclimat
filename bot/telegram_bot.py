# bot/telegram_bot.py

from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message


class TelegramBot:
    def __init__(self, token, room_state):
        self.bot = Bot(token=token)
        self.dp = Dispatcher()
        self.room_state = room_state

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        self.register_handlers()

    def register_handlers(self):
        @self.dp.message(Command("start"))
        async def start_handler(message: Message):
            await message.answer(
                "üëã –ü—Ä–∏–≤–µ—Ç!\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
                "/status - —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ\n"
                "/people - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π\n"
                "/temperature_in - —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–º–µ—â–µ–Ω–∏—è\n"
                "/temperature_out - —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ —É–ª–∏—Ü–µ\n"
                "/co2 - —É—Ä–æ–≤–µ–Ω—å CO‚ÇÇ\n"
                "/light - –º–æ—â–Ω–æ—Å—Ç—å –æ—Å–≤–µ—â–µ–Ω–∏—è\n"
                "/heater - —Å—Ç–∞—Ç—É—Å –æ–±–æ–≥—Ä–µ–≤–∞—Ç–µ–ª—è\n"
                "/ac - —Å—Ç–∞—Ç—É—Å –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞\n"
                "/ventilation - —Å—Ç–∞—Ç—É—Å –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏"
            )

        @self.dp.message(Command("status"))
        async def status_handler(message: Message):
            data = self.room_state.get_state()
            text = (
                f"üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:\n"
                f"üïí –í—Ä–µ–º—è: {data['timestamp']}\n"
                f"üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π: {data['people_count']}\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–º–µ—â–µ–Ω–∏—è: {data['indoor_temp']}¬∞C\n"
                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ —É–ª–∏—Ü–µ: {data['outdoor_temp']}¬∞C\n"
                f"ü´Å –£—Ä–æ–≤–µ–Ω—å CO‚ÇÇ: {data['co2']} ppm\n"
                f"üí° –û—Å–≤–µ—â–µ–Ω–∏–µ: {data['light_power']}\n"
                f"üî• –û–±–æ–≥—Ä–µ–≤–∞—Ç–µ–ª—å: {data['heater']}\n"
                f"‚ùÑ –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä: {data['ac']}\n"
                f"üå¨ –í–µ–Ω—Ç–∏–ª—è—Ü–∏—è: {data['ventilation']}"
            )
            await message.answer(text)

        @self.dp.message(Command("people"))
        async def people_handler(message: Message):
            count = self.room_state.get_state()['people_count']
            await message.answer(f"üë• –í –ø–æ–º–µ—â–µ–Ω–∏–∏: {count} —á–µ–ª–æ–≤–µ–∫(–∞)")

        @self.dp.message(Command("temperature_in"))
        async def temperature_handler(message: Message):
            temp = self.room_state.get_state()['indoor_temp']
            await message.answer(f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–º–µ—â–µ–Ω–∏—è: {temp}¬∞C")

        @self.dp.message(Command("temperature_out"))
        async def temperature_handler(message: Message):
            temp = self.room_state.get_state()['outdoor_temp']
            await message.answer(f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ —É–ª–∏—Ü–µ: {temp}¬∞C")

        @self.dp.message(Command("co2"))
        async def co2_handler(message: Message):
            co2 = self.room_state.get_state()['co2']
            await message.answer(f"ü´Å –£—Ä–æ–≤–µ–Ω—å CO‚ÇÇ: {co2} ppm")

        @self.dp.message(Command("light"))
        async def light_handler(message: Message):
            light = self.room_state.get_state()['light_power']
            await message.answer(f"üí° –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Å–≤–µ—â–µ–Ω–∏—è: {light}")

        @self.dp.message(Command("heater"))
        async def heater_handler(message: Message):
            heater = self.room_state.get_state()['heater']
            await message.answer(f"üî• –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–æ–≥—Ä–µ–≤–∞—Ç–µ–ª—è: {heater}")

        @self.dp.message(Command("ac"))
        async def ac_handler(message: Message):
            ac = self.room_state.get_state()['ac']
            await message.answer(f"‚ùÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞: {ac}")

        @self.dp.message(Command("ventilation"))
        async def vent_handler(message: Message):
            vent = self.room_state.get_state()['ventilation']
            await message.answer(f"üå¨ –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏: {vent}")

    async def start(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        print("[BOT] –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        await self.dp.start_polling(self.bot)